{"version":3,"sources":["resources/players.png","resources/star.png","resources/balloons.gif","FileInput.js","Card.js","ShuffleButton.js","Game.js","Scoreboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FileInput","props","handleSubmit","bind","getBase64","fileInput","React","createRef","formClassName","e","target","files","file","reader","FileReader","readAsDataURL","onload","manageImages","result","onerror","error","this","errorHandler","event","preventDefault","extra","onChange","className","htmlFor","icon","faUpload","id","type","ref","multiple","accept","Component","Card","state","open","cardsStatus","generateClass","updateState","index","setState","style","transform","cardPosition","key","width","cardSize","w","height","h","onDoubleClick","alt","onClick","src","ShuffleButton","switchCardsPositions","actualIndex1","actualIndex2","index1","faArrowsAltH","index2","Game","images","map","cardsPosition","trackedPositions","length","Scoreboard","hasWinner","winner","balloons","players","enteredNamed","prompt","updatePlayers","p","i","addStarToPlayer","removeStarFromPlayer","stars","starNum","playerPoints","push","star","generateStars","App","appPart","imagesBase64","setCardsPosition","setTrackedPositions","setCardSize","changeCardStatus","appendCardToLists","updateGraphicPositions","addPointToPlayer","removePointFromPlayer","changeAppPart","setWinner","maxPoints","console","log","max","winners","getWinners","init","rows","cardNum","Math","ceil","cardsLength","l","cardPositions","calculateCardPosition","x","y","cardfloor","cardPosition1","cardPosition2","trackedPosition","key1","Object","keys","find","key2","lastTrackedPosition","player","partNum","updateCards","newPlayerPoints","image","display","faTrophy","faChevronLeft","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a4978c6a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/players.9e556d63.png\";","module.exports = __webpack_public_path__ + \"static/media/star.18d108fc.png\";","module.exports = __webpack_public_path__ + \"static/media/balloons.d2fdbd06.gif\";","import React from 'react';\r\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\r\nimport { faUpload } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class FileInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.getBase64 = this.getBase64.bind(this)\r\n    this.fileInput = React.createRef();\r\n    this.formClassName = this.formClassName.bind(this);\r\n  }\r\n\r\n\r\n  getBase64(e) {\r\n    for (const file of e.target.files) {\r\n      let reader = new FileReader()\r\n      reader.readAsDataURL(file)\r\n      reader.onload = () => {\r\n        this.props.manageImages(reader.result)\r\n      };\r\n      reader.onerror = function (error) {\r\n        this.props.errorHandler(error)\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.getBase64(event);\r\n  }\r\n\r\n  formClassName() {\r\n    if (this.props.extra === true) {\r\n      return \"file-input extra\"\r\n    }\r\n    else {\r\n      return \"file-input\"\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <form onChange={this.handleSubmit} className={this.formClassName()}>\r\n          <label htmlFor=\"select-images\">\r\n            <Icon icon={faUpload}/>\r\n          </label>\r\n          <input id=\"select-images\" type=\"file\" ref={this.fileInput} multiple={true} accept=\"image/*\"/>\r\n        <br />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Card extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      open: this.props.cardsStatus\r\n    }\r\n    this.generateClass = this.generateClass.bind(this);\r\n    this.updateState = this.updateState.bind(this);\r\n  }\r\n\r\n  generateClass(index) {\r\n    if (this.state.open === true) {return `card c${index}`} else {return `card show c${index}`}\r\n    //show is show the back\r\n  }\r\n\r\n  updateState() {\r\n    this.setState({open: !this.state.open})\r\n  }\r\n\r\n\r\n  render() {\r\n    return <div className=\"card-position\" style={\r\n      {transform: `translate(${this.props.cardPosition})`}}\r\n      key={this.props.key}>\r\n    <div className={this.generateClass(this.props.index)}>\r\n    <div className={'innerCard'} style={\r\n      {width: `${this.props.cardSize.w}vw`,\r\n      height: `${this.props.cardSize.h}vh`}\r\n    }>\r\n    <div className={'back'} onDoubleClick={this.updateState}></div>\r\n    <img alt=\"card front\" className={'front'}\r\n    onClick={this.updateState}\r\n    src={this.props.src}\r\n    />\r\n    </div>\r\n    </div></div>\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowsAltH } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class ShuffleButton extends Component {\r\n\r\n  render() {return (\r\n    <span className=\"switch-button\"\r\n    onClick={() => {this.props.switchCardsPositions(this.props.actualIndex1, this.props.actualIndex2)}}>\r\n    {this.props.index1+1} <Icon icon={faArrowsAltH}/> {this.props.index2+1} </span>\r\n  )}\r\n}\r\n","import React, { Component } from 'react';\r\nimport Card from './Card.js';\r\nimport ShuffleButton from './ShuffleButton.js';\r\n\r\nexport default class Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n  render() {\r\n  return <div> {this.props.images.map((src, index) => { return <div key={`card${index+1}`} >\r\n  <Card\r\n    cardSize={this.props.cardSize}\r\n    cardPosition={this.props.cardsPosition[index]}\r\n    index={index}\r\n    cardsStatus={this.props.cardsStatus[index]}\r\n    src={src}/></div> }) }\r\n    <div className=\"shuffle-buttons\">{this.props.images.map((src, index) => {\r\n      if (index !== 0) {\r\n        return <ShuffleButton actualIndex1={this.props.trackedPositions[index-1]}\r\n        key={`shuffle${index-1}${index}`}\r\n        index1={index-1} index2={index}\r\n        actualIndex2={this.props.trackedPositions[index]}\r\n        switchCardsPositions={this.props.switchCardsPositions}\r\n        />\r\n      }\r\n      else {\r\n        return <ShuffleButton\r\n        key={\"shuffleedges\"}\r\n        actualIndex1={this.props.trackedPositions[this.props.images.length-1]}\r\n        index1={0} index2={this.props.images.length-1}\r\n        actualIndex2={this.props.trackedPositions[0]}\r\n        switchCardsPositions={this.props.switchCardsPositions}\r\n        />\r\n      }\r\n    })}</div>\r\n    </div>\r\n  }\r\n}\r\n","import React from 'react';\r\nimport players from './resources/players.png'\r\nimport star from './resources/star.png'\r\nimport balloons from './resources/balloons.gif'\r\n\r\nfunction Scoreboard(props) {\r\n  //Add player by clicking the header Players\r\n  function handleHeaderClick() {\r\n    const enteredNamed = prompt('Please enter your name');\r\n    if (enteredNamed) {props.updatePlayers(enteredNamed)}\r\n  }\r\n\r\n    function generateStars(i) {\r\n      let stars = [];\r\n        for (let starNum = 0; starNum < props.playerPoints[i]; starNum++ ) {\r\n          stars.push (<td><img alt=\"star\" className=\"star\" src={star}/></td>)\r\n        }\r\n        return stars\r\n      }\r\n\r\n    return (<div id=\"scoreboard\">\r\n    {props.hasWinner && <div id=\"winner\">\r\n    {props.winner.map((w) => <h1 id=\"winner-msg\">{w}</h1>)}\r\n    <img alt=\"balloons\"\r\n    className=\"balloons\"\r\n    src={balloons}/></div>}\r\n    <img alt=\"players\" src={players} id=\"score-header\"\r\n    onClick={handleHeaderClick}/>\r\n    <table>\r\n    {props.players.map((p, i) => <tr className={`player ${i}`}>\r\n    <td onClick={() => props.addStarToPlayer(i)}\r\n    onDoubleClick={() => props.removeStarFromPlayer(i)}>{p}</td>\r\n    {generateStars(i)}</tr>)}\r\n    </table>\r\n    </div>)\r\n}\r\n\r\nexport default Scoreboard;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport FileInput from './FileInput.js';\nimport Game from './Game.js';\nimport Scoreboard from './Scoreboard.js';\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft, faTrophy } from '@fortawesome/free-solid-svg-icons'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      appPart: 1,\n      /*\n       * 1: Select 3 Photos\n       * 0: Error loading\n       * 2: All three cards are shown\n       */\n      error: false,\n      players: [],\n      playerPoints: [],\n      imagesBase64: [],\n      cardsStatus: [false, false, false],\n      //cards are originally flipped\n      cardsPosition: this.setCardsPosition(true),\n      trackedPositions: this.setTrackedPositions(true),\n      cardSize: this.setCardSize(true),\n      hasWinner: false,\n      winner: false\n      }\n\n    this.changeCardStatus = this.changeCardStatus.bind(this);\n    this.switchCardsPositions = this.switchCardsPositions.bind(this);\n    this.appendCardToLists = this.appendCardToLists.bind(this);\n    this.updateGraphicPositions = this.updateGraphicPositions.bind(this);\n    this.manageImages = this.manageImages.bind(this);\n    this.updatePlayers = this.updatePlayers.bind(this);\n    this.addPointToPlayer = this.addPointToPlayer.bind(this);\n    this.removePointFromPlayer = this.removePointFromPlayer.bind(this);\n    this.changeAppPart = this.changeAppPart.bind(this);\n    this.setCardsPosition = this.setCardsPosition.bind(this);\n    this.setWinner = this.setWinner.bind(this);\n\n  }\n\n  setWinner() {\n    let hasWinner = !this.state.hasWinner;\n    let winner;\n    if (hasWinner === false) { winner = false }\n    if (hasWinner === true) {\n      function getWinners(playerPoints, players) {\n        console.log(players);\n        let maxPoints;\n        function max(playerPoints) {\n          if (playerPoints.length === 0) {\n            return -1;\n          }\n\n          let max = playerPoints[0];\n\n        for (let i = 1; i < playerPoints.length; i++) {\n          if (playerPoints[i] > max) {\n            max = playerPoints[i];\n          }\n        }\n\n        return max;\n      }\n      maxPoints = max(playerPoints);\n\n      let winners = [];\n      for(let i = 0; i < playerPoints.length; i++) {\n          if (playerPoints[i] === maxPoints) {\n              winners.push(players[i]);}\n            }\n      return winners\n      }\n\n    winner = getWinners(this.state.playerPoints, this.state.players)\n  }\n    this.setState({hasWinner: hasWinner, winner: winner})\n  }\n\n  setCardSize(init) {\n    let width;\n    let height;\n    let rows = 1;\n    if (init === true) {\n      width = 23.4;\n      height = 44;\n    }\n    else {\n      let cardNum = this.state.imagesBase64.length;\n      if (cardNum === 3) {\n        width = 23.4;\n        height = 44;\n      }\n      else {\n        rows = Math.ceil(cardNum/4)\n        width = 100/(rows*4.2);\n        height = 71.5/(rows*1.495);\n      }\n    }\n    return {w: width, h: height}\n  }\n\n  setTrackedPositions(init) {\n    let cardsLength = 3;\n    if (init === false) {\n      let images = this.state.imagesBase64;\n      if (images.length === 3) { return }\n      // don't init locations again on selection of 3 cards\n      cardsLength = images.length;\n    }\n    let trackedPositions = {};\n    let l;\n    for (l = 0; l < cardsLength; l++) {\n      trackedPositions[l] = l;\n    }\n    if (init === true) {return trackedPositions}\n    else {\n      this.setState({trackedPositions: trackedPositions})}\n    }\n  setCardsPosition(init) {\n    let cardsLength = 3;\n    if (init === false) {\n      let images = this.state.imagesBase64;\n      if (images.length === 3) { return }\n      // don't init locations again on selection of 3 cards.\n      //we already do this on app start.\n      cardsLength = images.length;\n    }\n    let cardPositions = [];\n    for (let l = 0; l < cardsLength; l++) {\n      cardPositions.push(this.calculateCardPosition(l, init))\n    }\n    if (init === true) {return cardPositions}\n    else {\n      this.setState({cardsPosition: cardPositions})\n    }\n    }\n  calculateCardPosition(index, init) {\n    //calculate the added card's position graphically\n    let viewWidth = 96;\n    let x;\n    let y;\n    if (init === true) {\n      x = 4 + index*32;\n      //the 4 is because if the cards is too the left its ugly.\n      y = 46.4; }\n    else {\n        let cardNum = this.state.imagesBase64.length;\n        let cardfloor = Math.ceil((index+1)/4);\n        x = 2 + ((index)-((cardfloor-1)*4))*viewWidth/4\n        if (cardNum>=4) {\n        if (cardNum===4) {\n          y= 46.4;\n        }\n        else {\n          console.log((index)-((cardfloor-1)*4))\n          if (cardfloor !== 1) {\n          y = 46.4+53.4/2*(cardfloor-1)}\n          else { y=46.4 }\n        }\n        x=x+2*Math.ceil(cardNum/4)\n        //again centering the cards cuz it's prettier this way\n      }\n    }\n    return `${x}vw, ${y}vh`\n    }\n\n  switchCardsPositions(index1, index2) {\n    let cardPosition1 = this.state.cardsPosition[index1];\n    let cardPosition2 = this.state.cardsPosition[index2];\n    let cardsPosition = [...this.state.cardsPosition];\n    cardsPosition[index1] = cardPosition2;\n    cardsPosition[index2] = cardPosition1;\n    let trackedPosition = this.state.trackedPositions;\n    const key1 = Object.keys(trackedPosition).find(key => trackedPosition[key] === index1);\n    const key2 = Object.keys(trackedPosition).find(key => trackedPosition[key] === index2);\n    trackedPosition[key2] = index1;\n    trackedPosition[key1] = index2;\n    this.setState({cardsPosition: cardsPosition, trackedPositions: trackedPosition})\n    }\n\n  changeCardStatus(i) {\n      let cardsStatus = this.state.cardsStatus;\n      cardsStatus[i] = !this.state.cardsStatus[i];\n      this.setState({cardsStatus: cardsStatus})\n    }\n\n  appendCardToLists() {\n    let trackedPositions = this.state.trackedPositions;\n    let lastTrackedPosition = Object.keys(trackedPositions).length-1;\n    trackedPositions[lastTrackedPosition] = lastTrackedPosition;\n    this.setState({\n        cardsStatus: [...this.state.cardsStatus, false],\n        cardsPosition: this.updateGraphicPositions(),\n        trackedPositions: trackedPositions\n          })\n    }\n\n  updateGraphicPositions() {\n    return this.state.cardsPosition\n    }\n\n  updatePlayers(player) {\n    //Also initiates player points\n    this.setState({players: [...this.state.players, player],\n      playerPoints: [...this.state.playerPoints, 0]})\n  }\n\n  changeAppPart(partNum) {\n    if (partNum === 1) {\n      this.setState({appPart: 1},\n      this.updateCards)\n    }\n    if (partNum === 2) {\n      this.setState({appPart: 2},\n      this.updateCards)\n    }\n  }\n\n  updateCards() {\n    if (this.state.appPart === 1) {\n      this.setState({imagesBase64: [],\n      cardsStatus: [false, false, false],\n      //cards are originally flipped\n      cardsPosition: this.setCardsPosition(true),\n      trackedPositions: this.setTrackedPositions(true),\n      cardSize: this.setCardSize(true)})\n    }\n    if (this.state.appPart === 2) {\n    this.setCardsPosition(false);\n    this.setTrackedPositions(false);\n    this.setState({\n      cardsStatus: this.state.imagesBase64.map((e, index) => {\n        if (this.state.cardsStatus[index]) {return this.state.cardsStatus[index]}\n        else {return false}}),\n      cardSize: this.setCardSize(false)\n        //update with the new card's flip status\n      })\n    }\n  }\n\n  addPointToPlayer(index) {\n    let playerPoints = this.state.playerPoints;\n    let newPlayerPoints = [...playerPoints];\n    newPlayerPoints[index] = newPlayerPoints[index] + 1;\n    this.setState({\n      playerPoints: newPlayerPoints\n    })\n  }\n\n  removePointFromPlayer(index) {\n    let playerPoints = this.state.playerPoints;\n    let newPlayerPoints = [...playerPoints];\n    newPlayerPoints[index] = newPlayerPoints[index] - 3;\n    this.setState({\n      playerPoints: newPlayerPoints\n    })\n  }\n\n  manageImages(image) {\n    // if (this.state.imagesBase64.length < 3) {\n    //Restrict more than 3 images - commented out\n    this.setState( {imagesBase64: [...this.state.imagesBase64, image]});\n    // }\n    if (this.state.imagesBase64.length >= 3) {\n      this.changeAppPart(2)\n    }\n  }\n\n  errorHandler(error) {\n    this.setState({error: error})\n  }\n\n  render() {\n    let display = []\n    if (this.state.appPart === 1) {\n      display.push(<div key=\"fileinput\">\n      <FileInput errorHandler={this.errorHandler}\n      manageImages={this.manageImages}/>\n      <Icon\n        className=\"trophy-icon\"\n        icon={faTrophy}\n        onClick={() => this.setWinner()}\n        />\n      </div>)\n    }\n    if (this.state.appPart > 1) {\n      display.push(<div key=\"game\"><Game\n        cardSize={this.state.cardSize}\n        cardsStatus={this.state.cardsStatus}\n        cardsPosition={this.state.cardsPosition}\n        trackedPositions={this.state.trackedPositions}\n        switchCardsPositions={this.switchCardsPositions}\n        images={this.state.imagesBase64}/>\n        <FileInput extra={true}\n        errorHandler={this.errorHandler}\n        manageImages={this.manageImages}/>\n        <Icon\n          className=\"trophy-icon\"\n          icon={faTrophy}\n          onClick={() => this.setWinner()}\n          />\n        <Icon icon={faChevronLeft}\n        className=\"back-button\"\n        onClick={() => this.changeAppPart(1)}/></div>)\n    }\n    display.push(<Scoreboard key=\"scoreboard\"\n      winner={this.state.winner}\n      hasWinner={this.state.hasWinner}\n      updatePlayers={this.updatePlayers}\n      playerPoints={this.state.playerPoints}\n      addStarToPlayer={this.addPointToPlayer}\n      removeStarFromPlayer={this.removePointFromPlayer}\n      players={this.state.players}/>)\n    return display\n\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}